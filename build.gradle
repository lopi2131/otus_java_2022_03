plugins {
    id 'idea'
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
    id 'com.github.johnrengelman.shadow' version '7.1.2' apply false
    id 'org.springframework.boot' version '2.7.1' apply false
}

idea {
    project {
        languageLevel = 17
    }
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

allprojects {
    group "ru.otus"

    repositories {
        mavenCentral()
    }

    apply plugin: "io.spring.dependency-management"
    dependencyManagement {
        dependencies {
            imports {
                mavenBom "org.springframework.boot:spring-boot-dependencies:2.7.1"
                mavenBom "org.testcontainers:testcontainers-bom:1.17.1"
                mavenBom "com.google.protobuf:protobuf-bom:3.21.1"
            }
            dependency "com.google.guava:guava:${Versions.guava}"
            dependency "org.assertj:assertj-core:${Versions.assertJ}"
            dependency "org.junit.jupiter:junit-jupiter:${Versions.junitJupiter}"
            dependency "org.mockito:mockito-junit-jupiter:${Versions.mockitoJunit}"
            dependency "org.junit.jupiter:junit-jupiter-engine:${Versions.junitJupiter}"
            dependency "org.junit.jupiter:junit-jupiter-api:${Versions.junitJupiter}"
            dependency "org.openjdk.jmh:jmh-core:${Versions.jmh}"
            dependency "org.openjdk.jmh:jmh-generator-annprocess:${Versions.jmh}"
            dependency "org.ow2.asm:asm-commons:${Versions.asm}"
            dependency("org.glassfish:jakarta.json:${Versions.glassfishJson}")
            dependency("org.testcontainers:junit-jupiter:${Versions.testContainers}")
            dependency("org.testcontainers:postgresql:${Versions.testContainers}")
            dependency ("ch.qos.logback:logback-classic:${Versions.logback}")
            dependency ("org.flywaydb:flyway-core:${Versions.flyway}")
            dependency ("org.postgresql:postgresql:${Versions.postgresql}")
            dependency ("com.zaxxer:HikariCP:${Versions.hikariCP}")
            dependency("io.grpc:grpc-netty:${Versions.grpc}")
            dependency("io.grpc:grpc-protobuf:${Versions.grpc}")
            dependency("io.grpc:grpc-stub:${Versions.grpc}")
            dependency("org.webjars:bootstrap:${Versions.bootstrap}")
            dependency("org.webjars:stomp-websocket:${Versions.stomp}")
            dependency("org.webjars:sockjs-client:${Versions.sockjs}")
            dependency("org.springdoc:springdoc-openapi-ui:${Versions.springDocOpenapiUi}")
        }
    }
}

//gradle -q hello
task hello {
    println 'Hello world!'
}